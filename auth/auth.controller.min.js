"use strict";var AuthController_1,__decorate=this&&this.__decorate||function(e,t,r,o){var a,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var n=e.length-1;n>=0;n--)(a=e[n])&&(i=(s<3?a(i):s>3?a(t,r,i):a(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},__param=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},__rest=this&&this.__rest||function(e,t){var r={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.indexOf(o)<0&&(r[o]=e[o]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(o=Object.getOwnPropertySymbols(e);a<o.length;a++)t.indexOf(o[a])<0&&Object.prototype.propertyIsEnumerable.call(e,o[a])&&(r[o[a]]=e[o[a]])}return r};Object.defineProperty(exports,"__esModule",{value:!0}),exports.AuthController=void 0;const common_1=require("@nestjs/common"),crypto_1=require("crypto"),swagger_1=require("@nestjs/swagger"),ldap_query_handler_1=require("../users/ldap.query.handler"),users_service_1=require("../users/users.service"),JwtValidationResponse_1=require("./api/JwtValidationResponse"),login_request_1=require("./api/login.request"),LoginResponse_1=require("./api/LoginResponse"),OidcClientResponse_1=require("./api/OidcClientResponse"),auth_controller_swagger_desc_1=require("./auth.controller.swagger.desc"),auth_guard_1=require("./auth.guard"),auth_service_1=require("./auth.service"),credentials_utils_1=require("./credentials.utils"),jwt_type_decorator_1=require("./jwt/jwt.type.decorator"),csrf_guard_1=require("./csrf.guard"),keycloak_service_1=require("../keycloak/keycloak.service"),LoginJwtResponse_1=require("./api/LoginJwtResponse");let AuthController=AuthController_1=class{constructor(e,t,r){this.usersService=e,this.keyCloakService=t,this.authService=r,this.logger=new common_1.Logger(AuthController_1.name),this.CSRF_COOKIE_HEADER="_csrf"}async loginWithRSAJwtKeysAdmin(e,t){return this.logger.debug("Call loginWithRSAJwtKeysAdmin"),this.loginWithRSAJwtKeys(e,t)}async loginWithRSAJwtKeys(e,t){let r;this.logger.debug("Call loginWithRSAJwtKeys"),r=e.op===login_request_1.FormMode.OIDC?await this.loginOidc(e):await this.login(e);const{token:o}=r,a=__rest(r,["token"]);return t.header("authorization",o),a}async getDomCsrfToken(e,t){this.logger.debug("Call getDomCsrfToken");const r=e.headers.fingerprint;if(!r)throw new common_1.BadRequestException("Fingerprint  header is required");const o=crypto_1.createHash("md5").update(r).digest("hex");return t.setCookie(this.CSRF_COOKIE_HEADER,o,{httpOnly:!0,sameSite:"strict"}),o}async getCsrfToken(e){this.logger.debug("Call getCsrfToken");const t=crypto_1.randomBytes(32).toString("base64").substring(0,32);return e.setCookie(this.CSRF_COOKIE_HEADER,t,{httpOnly:!0,sameSite:"strict"}),t}async getOidcClient(){this.logger.debug("Call getOidcClient");const e=this.keyCloakService.getClient(keycloak_service_1.ClientType.PUBLIC);return{clientId:e.client_id,clientSecret:e.client_secret,metadataUrl:e.metadata_url}}async loginWithKIDSqlJwt(e,t){this.logger.debug("Call loginWithKIDSqlJwt");const r=await this.login(e);return t.header("authorization",await this.authService.createToken({user:r.email},auth_service_1.JwtProcessorType.SQL_KID)),r}async validateWithKIDSqlJwt(){return{secret:"this is our secret"}}async loginWithWeakKeyJwt(e,t){this.logger.debug("Call loginWithKIDSqlJwt");const r=await this.login(e);return t.header("authorization",await this.authService.createToken({user:r.email},auth_service_1.JwtProcessorType.WEAK_KEY)),r}async validateWithWeakKeyJwt(){return{secret:"this is our secret"}}async loginWithJKUJwt(e,t){this.logger.debug("Call loginWithJKUJwt");const r=await this.login(e);return t.header("authorization",await this.authService.createToken({user:r.email},auth_service_1.JwtProcessorType.JKU)),r}async validateWithJKUJwt(){return{secret:"this is our secret"}}async loginWithJWKJwt(e,t){this.logger.debug("Call loginWithJWKJwt");const r=await this.login(e);return t.header("authorization",await this.authService.createToken({user:r.email},auth_service_1.JwtProcessorType.JWK)),r}async validateWithJWKJwt(){return{secret:"this is our secret"}}async loginWithX5CJwt(e,t){this.logger.debug("Call loginWithX5CJwt");const r=await this.login(e);return t.header("authorization",await this.authService.createToken({user:r.email},auth_service_1.JwtProcessorType.X5C)),r}async validateWithX5CJwt(){return{secret:"this is our secret"}}async loginWithX5UJwt(e,t){this.logger.debug("Call loginWithX5UJwt");const r=await this.login(e);return t.header("Authorization",await this.authService.createToken({user:r.email},auth_service_1.JwtProcessorType.X5U)),r}async validateWithX5UJwt(){return{secret:"this is our secret"}}async loginOidc(e){try{const{token_type:t,access_token:r}=await this.keyCloakService.generateToken({username:e.user,password:e.password});return{email:e.user,ldapProfileLink:ldap_query_handler_1.LdapQueryHandler.LDAP_SEARCH_QUERY(e.user),token:`${t} ${r}`}}catch(e){if(401===e.response.status)throw new common_1.UnauthorizedException({error:"Invalid credentials",location:__filename});throw new common_1.InternalServerErrorException({error:e.message,location:__filename})}}async login(e){let t;try{t=await this.usersService.findByEmail(e.user)}catch(e){throw new common_1.InternalServerErrorException({error:e.message,location:__filename})}if(!t||!await credentials_utils_1.passwordMatches(e.password,t.password))throw new common_1.UnauthorizedException({error:"Invalid credentials",location:__filename});return{token:await this.authService.createToken({user:t.email,exp:90+Math.floor(Date.now()/1e3)},auth_service_1.JwtProcessorType.RSA),email:t.email,ldapProfileLink:ldap_query_handler_1.LdapQueryHandler.LDAP_SEARCH_QUERY(t.email)}}};__decorate([common_1.Post("/admin/login"),swagger_1.ApiCreatedResponse({type:LoginResponse_1.LoginResponse}),swagger_1.ApiUnauthorizedResponse({schema:{type:"object",properties:{error:{type:"string"},location:{type:"string"}}},description:"invalid credentials"}),swagger_1.ApiOperation({description:auth_controller_swagger_desc_1.SWAGGER_DESC_LOGIN_WITH_RSA_JWT_KEYS}),__param(0,common_1.Body()),__param(1,common_1.Res({passthrough:!0})),__metadata("design:type",Function),__metadata("design:paramtypes",[login_request_1.LoginRequest,Object]),__metadata("design:returntype",Promise)],AuthController.prototype,"loginWithRSAJwtKeysAdmin",null),__decorate([common_1.Post("login"),common_1.UseGuards(csrf_guard_1.CsrfGuard),swagger_1.ApiCreatedResponse({type:LoginResponse_1.LoginResponse}),swagger_1.ApiUnauthorizedResponse({schema:{type:"object",properties:{error:{type:"string"},location:{type:"string"}}},description:"invalid credentials"}),swagger_1.ApiOperation({description:auth_controller_swagger_desc_1.SWAGGER_DESC_LOGIN_WITH_RSA_JWT_KEYS}),__param(0,common_1.Body()),__param(1,common_1.Res({passthrough:!0})),__metadata("design:type",Function),__metadata("design:paramtypes",[login_request_1.LoginRequest,Object]),__metadata("design:returntype",Promise)],AuthController.prototype,"loginWithRSAJwtKeys",null),__decorate([common_1.Get("dom-csrf-flow"),swagger_1.ApiOperation({description:auth_controller_swagger_desc_1.SWAGGER_DESC_REQUEST_WITH_DOM_CSRF_TOKEN}),swagger_1.ApiBadRequestResponse({description:"Bad request, fingerprint is required",schema:{type:"object",properties:{statusCode:{type:"number"},message:{type:"string"},error:{type:"string"}}}}),__param(0,common_1.Req()),__param(1,common_1.Res({passthrough:!0})),__metadata("design:type",Function),__metadata("design:paramtypes",[Object,Object]),__metadata("design:returntype",Promise)],AuthController.prototype,"getDomCsrfToken",null),__decorate([common_1.Get("simple-csrf-flow"),swagger_1.ApiOperation({description:auth_controller_swagger_desc_1.SWAGGER_DESC_REQUEST_WITH_SIMPLE_CSRF_TOKEN}),swagger_1.ApiOkResponse({description:"Returns simple csrf token"}),__param(0,common_1.Res({passthrough:!0})),__metadata("design:type",Function),__metadata("design:paramtypes",[Object]),__metadata("design:returntype",Promise)],AuthController.prototype,"getCsrfToken",null),__decorate([common_1.Get("oidc-client"),swagger_1.ApiResponse({type:OidcClientResponse_1.OidcClientResponse,status:common_1.HttpStatus.OK}),swagger_1.ApiOperation({description:auth_controller_swagger_desc_1.SWAGGER_DESC_CALL_OIDC_CLIENT}),__metadata("design:type",Function),__metadata("design:paramtypes",[]),__metadata("design:returntype",Promise)],AuthController.prototype,"getOidcClient",null),__decorate([common_1.Post("jwt/kid-sql/login"),swagger_1.ApiCreatedResponse({type:LoginJwtResponse_1.LoginJwtResponse}),swagger_1.ApiUnauthorizedResponse({schema:{type:"object",properties:{error:{type:"string"},location:{type:"string"}}},description:"invalid credentials"}),swagger_1.ApiOperation({description:auth_controller_swagger_desc_1.SWAGGER_DESC_LOGIN_WITH_KID_SQL_JWT}),__param(0,common_1.Body()),__param(1,common_1.Res({passthrough:!0})),__metadata("design:type",Function),__metadata("design:paramtypes",[login_request_1.LoginRequest,Object]),__metadata("design:returntype",Promise)],AuthController.prototype,"loginWithKIDSqlJwt",null),__decorate([common_1.Get("jwt/kid-sql/validate"),common_1.UseGuards(auth_guard_1.AuthGuard),jwt_type_decorator_1.JwtType(auth_service_1.JwtProcessorType.SQL_KID),swagger_1.ApiOkResponse({type:JwtValidationResponse_1.JwtValidationResponse}),swagger_1.ApiUnauthorizedResponse({description:"invalid credentials",schema:{type:"object",properties:{error:{type:"string"},location:{type:"string"}}}}),swagger_1.ApiOperation({description:auth_controller_swagger_desc_1.SWAGGER_DESC_VALIDATE_WITH_KID_SQL_JWT}),__metadata("design:type",Function),__metadata("design:paramtypes",[]),__metadata("design:returntype",Promise)],AuthController.prototype,"validateWithKIDSqlJwt",null),__decorate([common_1.Post("jwt/weak-key/login"),swagger_1.ApiCreatedResponse({type:LoginJwtResponse_1.LoginJwtResponse}),swagger_1.ApiUnauthorizedResponse({schema:{type:"object",properties:{error:{type:"string"},location:{type:"string"}}},description:"invalid credentials"}),swagger_1.ApiOperation({description:auth_controller_swagger_desc_1.SWAGGER_DESC_LOGIN_WITH_WEAK_KEY_JWT}),__param(0,common_1.Body()),__param(1,common_1.Res({passthrough:!0})),__metadata("design:type",Function),__metadata("design:paramtypes",[login_request_1.LoginRequest,Object]),__metadata("design:returntype",Promise)],AuthController.prototype,"loginWithWeakKeyJwt",null),__decorate([common_1.Get("jwt/weak-key/validate"),common_1.UseGuards(auth_guard_1.AuthGuard),jwt_type_decorator_1.JwtType(auth_service_1.JwtProcessorType.WEAK_KEY),swagger_1.ApiOperation({description:auth_controller_swagger_desc_1.SWAGGER_DESC_VALIDATE_WITH_WEAK_KEY_JWT}),swagger_1.ApiOkResponse({type:JwtValidationResponse_1.JwtValidationResponse}),swagger_1.ApiUnauthorizedResponse({description:"invalid credentials",schema:{type:"object",properties:{error:{type:"string"},location:{type:"string"}}}}),__metadata("design:type",Function),__metadata("design:paramtypes",[]),__metadata("design:returntype",Promise)],AuthController.prototype,"validateWithWeakKeyJwt",null),__decorate([common_1.Post("jwt/jku/login"),swagger_1.ApiCreatedResponse({type:LoginJwtResponse_1.LoginJwtResponse}),swagger_1.ApiUnauthorizedResponse({description:"invalid credentials",schema:{type:"object",properties:{error:{type:"string"},location:{type:"string"}}}}),swagger_1.ApiOperation({description:auth_controller_swagger_desc_1.SWAGGER_DESC_LOGIN_WITH_JKU_JWT}),__param(0,common_1.Body()),__param(1,common_1.Res({passthrough:!0})),__metadata("design:type",Function),__metadata("design:paramtypes",[login_request_1.LoginRequest,Object]),__metadata("design:returntype",Promise)],AuthController.prototype,"loginWithJKUJwt",null),__decorate([common_1.Get("jwt/jku/validate"),common_1.UseGuards(auth_guard_1.AuthGuard),jwt_type_decorator_1.JwtType(auth_service_1.JwtProcessorType.JKU),swagger_1.ApiOperation({description:auth_controller_swagger_desc_1.SWAGGER_DESC_VALIDATE_WITH_JKU_JWT}),swagger_1.ApiOkResponse({type:JwtValidationResponse_1.JwtValidationResponse}),swagger_1.ApiUnauthorizedResponse({description:"invalid credentials",schema:{type:"object",properties:{error:{type:"string"},location:{type:"string"}}}}),__metadata("design:type",Function),__metadata("design:paramtypes",[]),__metadata("design:returntype",Promise)],AuthController.prototype,"validateWithJKUJwt",null),__decorate([common_1.Post("jwt/jwk/login"),swagger_1.ApiCreatedResponse({type:LoginJwtResponse_1.LoginJwtResponse}),swagger_1.ApiUnauthorizedResponse({schema:{type:"object",properties:{error:{type:"string"},location:{type:"string"}}},description:"invalid credentials"}),swagger_1.ApiOperation({description:auth_controller_swagger_desc_1.SWAGGER_DESC_LOGIN_WITH_JWK_JWT}),__param(0,common_1.Body()),__param(1,common_1.Res({passthrough:!0})),__metadata("design:type",Function),__metadata("design:paramtypes",[login_request_1.LoginRequest,Object]),__metadata("design:returntype",Promise)],AuthController.prototype,"loginWithJWKJwt",null),__decorate([common_1.Get("jwt/jwk/validate"),common_1.UseGuards(auth_guard_1.AuthGuard),jwt_type_decorator_1.JwtType(auth_service_1.JwtProcessorType.JWK),swagger_1.ApiOperation({description:auth_controller_swagger_desc_1.SWAGGER_DESC_VALIDATE_WITH_JWK_JWT}),swagger_1.ApiOkResponse({type:JwtValidationResponse_1.JwtValidationResponse}),swagger_1.ApiUnauthorizedResponse({description:"invalid credentials",schema:{type:"object",properties:{error:{type:"string"},location:{type:"string"}}}}),__metadata("design:type",Function),__metadata("design:paramtypes",[]),__metadata("design:returntype",Promise)],AuthController.prototype,"validateWithJWKJwt",null),__decorate([common_1.Post("jwt/x5c/login"),swagger_1.ApiCreatedResponse({type:LoginJwtResponse_1.LoginJwtResponse}),swagger_1.ApiUnauthorizedResponse({schema:{type:"object",properties:{error:{type:"string"},location:{type:"string"}}},description:"invalid credentials"}),swagger_1.ApiOperation({description:auth_controller_swagger_desc_1.SWAGGER_DESC_LOGIN_WITH_X5C_JWT}),__param(0,common_1.Body()),__param(1,common_1.Res({passthrough:!0})),__metadata("design:type",Function),__metadata("design:paramtypes",[login_request_1.LoginRequest,Object]),__metadata("design:returntype",Promise)],AuthController.prototype,"loginWithX5CJwt",null),__decorate([common_1.Get("jwt/x5c/validate"),common_1.UseGuards(auth_guard_1.AuthGuard),jwt_type_decorator_1.JwtType(auth_service_1.JwtProcessorType.X5C),swagger_1.ApiOperation({description:auth_controller_swagger_desc_1.SWAGGER_DESC_VALIDATE_WITH_X5C_JWT}),swagger_1.ApiOkResponse({type:JwtValidationResponse_1.JwtValidationResponse}),swagger_1.ApiUnauthorizedResponse({description:"invalid credentials",schema:{type:"object",properties:{error:{type:"string"},location:{type:"string"}}}}),__metadata("design:type",Function),__metadata("design:paramtypes",[]),__metadata("design:returntype",Promise)],AuthController.prototype,"validateWithX5CJwt",null),__decorate([common_1.Post("jwt/x5u/login"),swagger_1.ApiCreatedResponse({type:LoginJwtResponse_1.LoginJwtResponse}),swagger_1.ApiUnauthorizedResponse({schema:{type:"object",properties:{error:{type:"string"},location:{type:"string"}}},description:"invalid credentials"}),swagger_1.ApiOperation({description:auth_controller_swagger_desc_1.SWAGGER_DESC_LOGIN_WITH_X5U_JWT}),__param(0,common_1.Body()),__param(1,common_1.Res({passthrough:!0})),__metadata("design:type",Function),__metadata("design:paramtypes",[login_request_1.LoginRequest,Object]),__metadata("design:returntype",Promise)],AuthController.prototype,"loginWithX5UJwt",null),__decorate([common_1.Get("jwt/x5u/validate"),common_1.UseGuards(auth_guard_1.AuthGuard),jwt_type_decorator_1.JwtType(auth_service_1.JwtProcessorType.X5U),swagger_1.ApiOperation({description:auth_controller_swagger_desc_1.SWAGGER_DESC_VALIDATE_WITH_X5U_JWT}),swagger_1.ApiOkResponse({type:JwtValidationResponse_1.JwtValidationResponse}),swagger_1.ApiUnauthorizedResponse({description:"invalid credentials",schema:{type:"object",properties:{error:{type:"string"},location:{type:"string"}}}}),__metadata("design:type",Function),__metadata("design:paramtypes",[]),__metadata("design:returntype",Promise)],AuthController.prototype,"validateWithX5UJwt",null),AuthController=AuthController_1=__decorate([common_1.Controller("/api/auth"),swagger_1.ApiTags("Auth controller"),__metadata("design:paramtypes",[users_service_1.UsersService,keycloak_service_1.KeyCloakService,auth_service_1.AuthService])],AuthController),exports.AuthController=AuthController;