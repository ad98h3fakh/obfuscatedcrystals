"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.JwtBearerTokenProcessor=void 0;const common_1=require("@nestjs/common"),jsonwebtoken_1=require("jsonwebtoken"),jwt_simple_1=require("jwt-simple"),jwt_token_processor_1=require("./jwt.token.processor");class JwtBearerTokenProcessor extends jwt_token_processor_1.JwtTokenProcessor{constructor(e,r){super(new common_1.Logger(JwtBearerTokenProcessor.name)),this.key=e,this.keyCloakService=r}async validateToken(e){const[r,o]=this.parse(e);if(!r||!o)throw this.log.debug("Invalid JWT token. parse() failure."),new Error("Authorization header contains an invalid JWT token.");if(!r.kid)throw this.log.debug(`Invalid JWT token. Expected a known KID but found ${r.kid}.`),new Error("Authorization header contains an invalid JWT token.");return await this.decodeAndVerifyToken(e,r.kid),o}async createToken(e){return this.log.debug("Call createToken"),jwt_simple_1.encode(e,this.key,"HS256")}async introspect(e){try{const r=await this.keyCloakService.introspectToken(e);if(!r||!r.sub)throw new Error("Internal error occurred introspecting JWT token.");return this.log.debug(`Successfully introspection ${e} JWT token.`),r}catch(e){if(401===e.statusCode)throw new Error("JWT token is expired or user has globally signed out, disabled or been deleted.");throw this.log.debug(`Failed to introspect JWT token. err: ${e.message}`),new Error("Internal error occurred introspecting JWT token.")}}async decodeAndVerifyToken(e,r){try{return await this.keyCloakService.verifyToken(e,r)}catch(e){if(this.log.debug(`Invalid JWT token. jwt.verify() failed: ${e.message}.`),e instanceof jsonwebtoken_1.TokenExpiredError)throw new Error(`Authorization header contains a JWT token that expired at ${e.expiredAt.toISOString()}.`);throw new Error("Authorization header contains an invalid JWT token.")}}}exports.JwtBearerTokenProcessor=JwtBearerTokenProcessor;