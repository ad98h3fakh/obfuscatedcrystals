"use strict";var CsrfGuard_1,__decorate=this&&this.__decorate||function(e,r,t,o){var s,c=arguments.length,n=c<3?r:null===o?o=Object.getOwnPropertyDescriptor(r,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,r,t,o);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(n=(c<3?s(n):c>3?s(r,t,n):s(r,t))||n);return c>3&&n&&Object.defineProperty(r,t,n),n};Object.defineProperty(exports,"__esModule",{value:!0}),exports.CsrfGuard=void 0;const common_1=require("@nestjs/common"),crypto_1=require("crypto"),login_request_1=require("./api/login.request");let CsrfGuard=CsrfGuard_1=class{constructor(){this.logger=new common_1.Logger(CsrfGuard_1.name)}async canActivate(e){this.logger.debug("Called canActivate");const r=e.switchToHttp().getRequest();try{const e=r.body,t=null==e?void 0:e.op;if(t===login_request_1.FormMode.CSRF||t===login_request_1.FormMode.DOM_BASED_CSRF){const o=r.cookies[CsrfGuard_1.CSRF_COOKIE_HEADER];if(decodeURIComponent(o)!==e.csrf&&this.throwError(),t===login_request_1.FormMode.DOM_BASED_CSRF&&!e.fingerprint){const r=crypto_1.createHash("md5").update(e.fingerprint).digest("hex");e.csrf!==r&&this.throwError()}}return!0}catch(e){this.logger.debug(`Failed to validate cookie: ${e.message}`),this.throwError()}}throwError(){throw new common_1.UnauthorizedException({error:"Invalid credentials",location:__filename})}};CsrfGuard.CSRF_COOKIE_HEADER="_csrf",CsrfGuard=CsrfGuard_1=__decorate([common_1.Injectable()],CsrfGuard),exports.CsrfGuard=CsrfGuard;