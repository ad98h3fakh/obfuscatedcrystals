"use strict";var FileController_1,__decorate=this&&this.__decorate||function(e,t,r,o){var a,i=arguments.length,s=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,r,o);else for(var n=e.length-1;n>=0;n--)(a=e[n])&&(s=(i<3?a(s):i>3?a(t,r,s):a(t,r))||s);return i>3&&s&&Object.defineProperty(t,r,s),s},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},__param=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.FileController=void 0;const common_1=require("@nestjs/common"),swagger_1=require("@nestjs/swagger"),constants_1=require("constants"),fs=require("fs"),path=require("path"),file_service_1=require("./file.service"),file_controller_swagger_desc_1=require("./file.controller.swagger.desc");let FileController=FileController_1=class{constructor(e){this.fileService=e,this.logger=new common_1.Logger(FileController_1.name)}async loadFile(e,t,r,o){let a;a=t||(o||"application/octet-stream");const i=await this.fileService.getFile(e);return r.type(a),i}async deleteFile(e){await this.fileService.deleteFile(e)}async uploadFile(e,t){try{("string"==typeof t||Buffer.isBuffer(t))&&(await fs.promises.access(path.dirname(e),constants_1.W_OK),await fs.promises.writeFile(e,t))}catch(e){this.logger.error(e.message)}}async readFile(e,t){try{const r=await this.fileService.getFile(e);return t.type("application/octet-stream"),r}catch(e){this.logger.error(e.message),t.status(common_1.HttpStatus.NOT_FOUND)}}};__decorate([common_1.Get(),swagger_1.ApiOkResponse({description:"File read successfully"}),swagger_1.ApiInternalServerErrorResponse({schema:{type:"object",properties:{error:{type:"string"},location:{type:"string"}}}}),swagger_1.ApiOperation({description:file_controller_swagger_desc_1.SWAGGER_DESC_READ_FILE}),__param(0,common_1.Query("path")),__param(1,common_1.Query("type")),__param(2,common_1.Res({passthrough:!0})),__param(3,common_1.Headers("accept")),__metadata("design:type",Function),__metadata("design:paramtypes",[String,String,Object,String]),__metadata("design:returntype",Promise)],FileController.prototype,"loadFile",null),__decorate([common_1.Delete(),swagger_1.ApiOperation({description:file_controller_swagger_desc_1.SWAGGER_DESC_DELETE_FILE}),swagger_1.ApiInternalServerErrorResponse({schema:{type:"object",properties:{error:{type:"string"},location:{type:"string"}}}}),swagger_1.ApiOkResponse({description:"File deleted successfully"}),__param(0,common_1.Query("path")),__metadata("design:type",Function),__metadata("design:paramtypes",[String]),__metadata("design:returntype",Promise)],FileController.prototype,"deleteFile",null),__decorate([common_1.Put("raw"),swagger_1.ApiOperation({description:file_controller_swagger_desc_1.SWAGGER_DESC_SAVE_RAW_CONTENT}),swagger_1.ApiOkResponse(),__param(0,common_1.Query("path")),__param(1,common_1.Body()),__metadata("design:type",Function),__metadata("design:paramtypes",[String,String]),__metadata("design:returntype",Promise)],FileController.prototype,"uploadFile",null),__decorate([common_1.Get("raw"),swagger_1.ApiOperation({description:file_controller_swagger_desc_1.SWAGGER_DESC_READ_FILE_ON_SERVER}),swagger_1.ApiNotFoundResponse({description:"File not Found"}),swagger_1.ApiOkResponse({description:"Returns requested file"}),__param(0,common_1.Query("path")),__param(1,common_1.Res({passthrough:!0})),__metadata("design:type",Function),__metadata("design:paramtypes",[String,Object]),__metadata("design:returntype",Promise)],FileController.prototype,"readFile",null),FileController=FileController_1=__decorate([common_1.Controller("/api/file"),swagger_1.ApiTags("Files controller"),__metadata("design:paramtypes",[file_service_1.FileService])],FileController),exports.FileController=FileController;