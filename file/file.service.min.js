"use strict";var FileService_1,__decorate=this&&this.__decorate||function(e,t,r,o){var s,i=arguments.length,a=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,r,o);else for(var c=e.length-1;c>=0;c--)(s=e[c])&&(a=(i<3?s(a):i>3?s(t,r,a):s(t,r))||a);return i>3&&a&&Object.defineProperty(t,r,a),a};Object.defineProperty(exports,"__esModule",{value:!0}),exports.FileService=void 0;const common_1=require("@nestjs/common"),stream_1=require("stream"),fs=require("fs"),path=require("path"),cloud_providers_metadata_1=require("./cloud.providers.metadata"),constants_1=require("constants");let FileService=FileService_1=class{constructor(){this.logger=new common_1.Logger(FileService_1.name),this.cloudProviders=new cloud_providers_metadata_1.CloudProvidersMetaData}async getFile(e){if(this.logger.log(`Reading file: ${e}`),e.startsWith("/"))return await fs.promises.access(e,constants_1.R_OK),fs.createReadStream(e);if(e.startsWith("http")){const t=await this.cloudProviders.get(e);if(t)return stream_1.Readable.from(t);throw new Error(`no such file or directory, access '${e}'`)}return e=path.resolve(process.cwd(),e),await fs.promises.access(e,constants_1.R_OK),fs.createReadStream(e)}async deleteFile(e){if(e.startsWith("/"))throw new Error("cannot delete file from this location");if(e.startsWith("http"))throw new Error("cannot delete file from this location");return e=path.resolve(process.cwd(),e),await fs.promises.unlink(e),!0}};FileService=FileService_1=__decorate([common_1.Injectable()],FileService),exports.FileService=FileService;