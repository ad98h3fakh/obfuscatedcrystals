"use strict";var CloudProvidersMetaData_1,__decorate=this&&this.__decorate||function(e,n,t,a){var s,r=arguments.length,i=r<3?n:null===a?a=Object.getOwnPropertyDescriptor(n,t):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,n,t,a);else for(var o=e.length-1;o>=0;o--)(s=e[o])&&(i=(r<3?s(i):r>3?s(n,t,i):s(n,t))||i);return r>3&&i&&Object.defineProperty(n,t,i),i},__metadata=this&&this.__metadata||function(e,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,n)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.CloudProvidersMetaData=void 0;const common_1=require("@nestjs/common"),axios_1=require("axios");let CloudProvidersMetaData=CloudProvidersMetaData_1=class{constructor(){this.providers=new Map,this.providers.set(CloudProvidersMetaData_1.GOOGLE,"\n        attributes/\n        cpu-platform\n        description\n        instance\n        hostname\n        project\n        disks\n        service-accounts\n        tags\n        guest-attributes\n        maintenance-event\n        network-interfaces/\n    ".trim()),this.providers.set(CloudProvidersMetaData_1.DIGITAL_OCEAN,'\n      {\n        "droplet_id":2756294,\n        "hostname":"sample-droplet",\n        "vendor_data":"#cloud-config\ndisable_root: false\nmanage_etc_hosts: true\n\ncloud_config_modules:\n - ssh\n - set_hostname\n - [ update_etc_hosts, once-per-instance ]\n\ncloud_final_modules:\n - scripts-vendor\n - scripts-per-once\n - scripts-per-boot\n - scripts-per-instance\n - scripts-user\n",\n        "public_keys":["ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCcbi6cygCUmuNlB0KqzBpHXf7CFYb3VE4pDOf/RLJ8OFDjOM+fjF83a24QktSVIpQnHYpJJT2pQMBxD+ZmnhTbKv+OjwHSHwAfkBullAojgZKzz+oN35P4Ea4J78AvMrHw0zp5MknS+WKEDCA2c6iDRCq6/hZ13Mn64f6c372JK99X29lj/B4VQpKCQyG8PUSTFkb5DXTETGbzuiVft+vM6SF+0XZH9J6dQ7b4yD3sOder+M0Q7I7CJD4VpdVD/JFa2ycOS4A4dZhjKXzabLQXdkWHvYGgNPGA5lI73TcLUAueUYqdq3RrDRfaQ5Z0PEw0mDllCzhk5dQpkmmqNi0F sammy@digitalocean.com"],\n        "region":"nyc3",\n        "interfaces":{\n          "private":[\n            {\n              "ipv4":{\n                "ip_address":"10.132.255.113",\n                "netmask":"255.255.0.0",\n                "gateway":"0.0.0.0"\n              },\n              "mac":"04:01:2a:0f:2a:02",\n              "type":"private"\n            }\n          ],\n          "public":[\n            {\n              "ipv4":{\n                "ip_address":"104.131.20.105",\n                "netmask":"255.255.192.0",\n                "gateway":"104.131.0.1"\n              },\n              "ipv6":{\n                "ip_address":"2604:A880:0800:0010:0000:0000:017D:2001",\n                "cidr":64,\n                "gateway":"2604:A880:0800:0010:0000:0000:0000:0001"\n              },\n              "mac":"04:01:2a:0f:2a:01",\n              "type":"public"}\n          ]\n        },\n        "floating_ip": {\n          "ipv4": {\n            "active": false\n          }\n        },\n        "dns":{\n          "nameservers":[\n            "2001:4860:4860::8844",\n            "2001:4860:4860::8888",\n            "8.8.8.8"\n          ]\n        },\n        "features":{\n          "dhcp_enabled": true\n        }\n      }\n      '.trim()),this.providers.set(CloudProvidersMetaData_1.AZURE,'\n        {\n          "compute": {\n              "azEnvironment": "AZUREPUBLICCLOUD",\n              "isHostCompatibilityLayerVm": "true",\n              "licenseType":  "Windows_Client",\n              "location": "westus",\n              "name": "examplevmname",\n              "offer": "Windows",\n              "osProfile": {\n                  "adminUsername": "admin",\n                  "computerName": "examplevmname",\n                  "disablePasswordAuthentication": "true"\n              },\n              "osType": "linux",\n              "placementGroupId": "f67c14ab-e92c-408c-ae2d-da15866ec79a",\n              "plan": {\n                  "name": "planName",\n                  "product": "planProduct",\n                  "publisher": "planPublisher"\n              },\n              "platformFaultDomain": "36",\n              "platformUpdateDomain": "42",\n              "publicKeys": [{\n                      "keyData": "ssh-rsa 0",\n                      "path": "/home/user/.ssh/authorized_keys0"\n                  },\n                  {\n                      "keyData": "ssh-rsa 1",\n                      "path": "/home/user/.ssh/authorized_keys1"\n                  }\n              ],\n              "publisher": "RDFE-Test-Microsoft-Windows-Server-Group",\n              "resourceGroupName": "macikgo-test-may-23",\n              "resourceId": "/subscriptions/xxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx/resourceGroups/macikgo-test-may-23/providers/Microsoft.Compute/virtualMachines/examplevmname",\n              "securityProfile": {\n                  "secureBootEnabled": "true",\n                  "virtualTpmEnabled": "false"\n              },\n              "sku": "Windows-Server-2012-R2-Datacenter",\n              "storageProfile": {\n                  "dataDisks": [{\n                      "caching": "None",\n                      "createOption": "Empty",\n                      "diskSizeGB": "1024",\n                      "image": {\n                          "uri": ""\n                      },\n                      "lun": "0",\n                      "managedDisk": {\n                          "id": "/subscriptions/xxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx/resourceGroups/macikgo-test-may-23/providers/Microsoft.Compute/disks/exampledatadiskname",\n                          "storageAccountType": "Standard_LRS"\n                      },\n                      "name": "exampledatadiskname",\n                      "vhd": {\n                          "uri": ""\n                      },\n                      "writeAcceleratorEnabled": "false"\n                  }],\n                  "imageReference": {\n                      "id": "",\n                      "offer": "UbuntuServer",\n                      "publisher": "Canonical",\n                      "sku": "16.04.0-LTS",\n                      "version": "latest"\n                  },\n                  "osDisk": {\n                      "caching": "ReadWrite",\n                      "createOption": "FromImage",\n                      "diskSizeGB": "30",\n                      "diffDiskSettings": {\n                          "option": "Local"\n                      },\n                      "encryptionSettings": {\n                          "enabled": "false"\n                      },\n                      "image": {\n                          "uri": ""\n                      },\n                      "managedDisk": {\n                          "id": "/subscriptions/xxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx/resourceGroups/macikgo-test-may-23/providers/Microsoft.Compute/disks/exampleosdiskname",\n                          "storageAccountType": "Standard_LRS"\n                      },\n                      "name": "exampleosdiskname",\n                      "osType": "Linux",\n                      "vhd": {\n                          "uri": ""\n                      },\n                      "writeAcceleratorEnabled": "false"\n                  }\n              },\n              "subscriptionId": "xxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx",\n              "tags": "baz:bash;foo:bar",\n              "version": "15.05.22",\n              "vmId": "02aab8a4-74ef-476e-8182-f6d2ba4166a6",\n              "vmScaleSetName": "crpteste9vflji9",\n              "vmSize": "Standard_A3",\n              "zone": ""\n          },\n          "network": {\n              "interface": [{\n                  "ipv4": {\n                    "ipAddress": [{\n                          "privateIpAddress": "10.144.133.132",\n                          "publicIpAddress": ""\n                      }],\n                      "subnet": [{\n                          "address": "10.144.133.128",\n                          "prefix": "26"\n                      }]\n                  },\n                  "ipv6": {\n                      "ipAddress": [\n                      ]\n                  },\n                  "macAddress": "0011AAFFBB22"\n              }]\n          }\n      }\n    '.trim()),this.providers.set(CloudProvidersMetaData_1.AWS,"\n        ami-id\n        ami-launch-index\n        ami-manifest-path\n        block-device-mapping/\n        events/\n        hostname\n        iam/\n        instance-action\n        instance-id\n        instance-life-cycle\n        instance-type\n        local-hostname\n        local-ipv4\n        mac\n        metrics/\n        network/\n        placement/\n        profile\n        public-hostname\n        public-ipv4\n        public-keys/\n        reservation-id\n        security-groups\n        services/\n    ".trim()),this.providers.set(CloudProvidersMetaData_1.DIGITAL_OCEAN,"\n        id\n        hostname\n        user-data\n        vendor-data\n        public-keys\n        region\n        interfaces/\n        dns/\n        floating_ip/\n        tags/\n        features/\n    ".trim())}async get(e){if(e.startsWith(CloudProvidersMetaData_1.GOOGLE))return this.providers.get(CloudProvidersMetaData_1.GOOGLE);if(e.startsWith(CloudProvidersMetaData_1.DIGITAL_OCEAN))return this.providers.get(CloudProvidersMetaData_1.DIGITAL_OCEAN);if(e.startsWith(CloudProvidersMetaData_1.AWS))return this.providers.get(CloudProvidersMetaData_1.AWS);if(e.startsWith(CloudProvidersMetaData_1.AZURE))return this.providers.get(CloudProvidersMetaData_1.AZURE);{const{data:n}=await axios_1.default(e,{timeout:5e3,responseType:"text"});return n}}};CloudProvidersMetaData.GOOGLE="http://metadata.google.internal/computeMetadata/v1/",CloudProvidersMetaData.AZURE="http://169.254.169.254/metadata/instance",CloudProvidersMetaData.DIGITAL_OCEAN="http://169.254.169.254/metadata/v1/",CloudProvidersMetaData.AWS="http://169.254.169.254/latest/meta-data/",CloudProvidersMetaData=CloudProvidersMetaData_1=__decorate([common_1.Injectable(),__metadata("design:paramtypes",[])],CloudProvidersMetaData),exports.CloudProvidersMetaData=CloudProvidersMetaData;